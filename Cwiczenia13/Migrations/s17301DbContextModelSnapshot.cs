// <auto-generated />
using System;
using Cwiczenia13.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cwiczenia13.Migrations
{
    [DbContext(typeof(s17301DbContext))]
    partial class s17301DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cwiczenia13.Models.Klient", b =>
                {
                    b.Property<int>("IdKlient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("IdKlient");

                    b.ToTable("Klient");

                    b.HasData(
                        new
                        {
                            IdKlient = 1,
                            Imie = "Agnieszka",
                            Nazwisko = "Poterek"
                        },
                        new
                        {
                            IdKlient = 2,
                            Imie = "Kacper",
                            Nazwisko = "Kali"
                        },
                        new
                        {
                            IdKlient = 3,
                            Imie = "Weronika",
                            Nazwisko = "Smardzik"
                        },
                        new
                        {
                            IdKlient = 4,
                            Imie = "Monika",
                            Nazwisko = "Zajac"
                        },
                        new
                        {
                            IdKlient = 5,
                            Imie = "Katarzyna",
                            Nazwisko = "Malec"
                        });
                });

            modelBuilder.Entity("Cwiczenia13.Models.Pracownik", b =>
                {
                    b.Property<int>("IdPracownik")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("IdPracownik");

                    b.ToTable("Pracownik");

                    b.HasData(
                        new
                        {
                            IdPracownik = 1,
                            Imie = "Wojciech",
                            Nazwisko = "Wojdat"
                        },
                        new
                        {
                            IdPracownik = 2,
                            Imie = "Marcin",
                            Nazwisko = "Poniatowski"
                        },
                        new
                        {
                            IdPracownik = 3,
                            Imie = "Bartosz",
                            Nazwisko = "Buczek"
                        },
                        new
                        {
                            IdPracownik = 4,
                            Imie = "Jakub",
                            Nazwisko = "Malewski"
                        },
                        new
                        {
                            IdPracownik = 5,
                            Imie = "Anna",
                            Nazwisko = "Jantar"
                        });
                });

            modelBuilder.Entity("Cwiczenia13.Models.WyrobCukierniczy", b =>
                {
                    b.Property<int>("IdWyrobuCukierniczego")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("CenaZaSzt")
                        .HasColumnType("real");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Typ")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("IdWyrobuCukierniczego");

                    b.ToTable("WyrobCukierniczy");

                    b.HasData(
                        new
                        {
                            IdWyrobuCukierniczego = 1,
                            CenaZaSzt = 60f,
                            Nazwa = "Beza Pavlova",
                            Typ = "ciasto"
                        },
                        new
                        {
                            IdWyrobuCukierniczego = 2,
                            CenaZaSzt = 20f,
                            Nazwa = "Karpatka",
                            Typ = "ciasto"
                        },
                        new
                        {
                            IdWyrobuCukierniczego = 3,
                            CenaZaSzt = 15f,
                            Nazwa = "Szarlotka",
                            Typ = "ciasto"
                        },
                        new
                        {
                            IdWyrobuCukierniczego = 4,
                            CenaZaSzt = 1.5f,
                            Nazwa = "Pączek",
                            Typ = "deser"
                        },
                        new
                        {
                            IdWyrobuCukierniczego = 5,
                            CenaZaSzt = 35f,
                            Nazwa = "Karmelowiec",
                            Typ = "ciasto"
                        });
                });

            modelBuilder.Entity("Cwiczenia13.Models.Zamowienie", b =>
                {
                    b.Property<int>("IdZamowienia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataPrzyjecia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRealizacji")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdKlient")
                        .HasColumnType("int");

                    b.Property<int>("IdPracownik")
                        .HasColumnType("int");

                    b.Property<string>("Uwagi")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("IdZamowienia");

                    b.HasIndex("IdKlient");

                    b.HasIndex("IdPracownik");

                    b.ToTable("Zamowienie");

                    b.HasData(
                        new
                        {
                            IdZamowienia = 1,
                            DataPrzyjecia = new DateTime(2020, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRealizacji = new DateTime(2020, 6, 6, 10, 4, 59, 918, DateTimeKind.Local).AddTicks(9954),
                            IdKlient = 1,
                            IdPracownik = 1,
                            Uwagi = "brak"
                        },
                        new
                        {
                            IdZamowienia = 2,
                            DataPrzyjecia = new DateTime(2020, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRealizacji = new DateTime(2020, 6, 6, 10, 4, 59, 922, DateTimeKind.Local).AddTicks(2203),
                            IdKlient = 2,
                            IdPracownik = 2,
                            Uwagi = "brak"
                        },
                        new
                        {
                            IdZamowienia = 3,
                            DataPrzyjecia = new DateTime(2020, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRealizacji = new DateTime(2020, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdKlient = 3,
                            IdPracownik = 3,
                            Uwagi = "sprawnie"
                        },
                        new
                        {
                            IdZamowienia = 4,
                            DataPrzyjecia = new DateTime(2020, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRealizacji = new DateTime(2020, 6, 6, 10, 4, 59, 922, DateTimeKind.Local).AddTicks(2354),
                            IdKlient = 4,
                            IdPracownik = 4,
                            Uwagi = ""
                        },
                        new
                        {
                            IdZamowienia = 5,
                            DataPrzyjecia = new DateTime(2020, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRealizacji = new DateTime(2020, 6, 6, 10, 4, 59, 922, DateTimeKind.Local).AddTicks(2372),
                            IdKlient = 5,
                            IdPracownik = 5,
                            Uwagi = ""
                        },
                        new
                        {
                            IdZamowienia = 6,
                            DataPrzyjecia = new DateTime(2020, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRealizacji = new DateTime(2020, 6, 6, 10, 4, 59, 922, DateTimeKind.Local).AddTicks(2386),
                            IdKlient = 1,
                            IdPracownik = 3,
                            Uwagi = ""
                        },
                        new
                        {
                            IdZamowienia = 7,
                            DataPrzyjecia = new DateTime(2020, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRealizacji = new DateTime(2020, 6, 6, 10, 4, 59, 922, DateTimeKind.Local).AddTicks(2400),
                            IdKlient = 2,
                            IdPracownik = 4,
                            Uwagi = "dlugo"
                        });
                });

            modelBuilder.Entity("Cwiczenia13.Models.Zamowienie_WyrobCukierniczy", b =>
                {
                    b.Property<int>("IdWyrobuCukierniczego")
                        .HasColumnType("int");

                    b.Property<int>("IdZamowienia")
                        .HasColumnType("int");

                    b.Property<int>("Ilosc")
                        .HasColumnType("int");

                    b.Property<string>("Uwagi")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("IdWyrobuCukierniczego", "IdZamowienia");

                    b.HasIndex("IdZamowienia");

                    b.ToTable("Zamowienie_WyrobCukierniczy");

                    b.HasData(
                        new
                        {
                            IdWyrobuCukierniczego = 1,
                            IdZamowienia = 1,
                            Ilosc = 1,
                            Uwagi = "przechowywac w chlodzie"
                        },
                        new
                        {
                            IdWyrobuCukierniczego = 2,
                            IdZamowienia = 2,
                            Ilosc = 2,
                            Uwagi = ""
                        },
                        new
                        {
                            IdWyrobuCukierniczego = 3,
                            IdZamowienia = 3,
                            Ilosc = 1,
                            Uwagi = ""
                        },
                        new
                        {
                            IdWyrobuCukierniczego = 4,
                            IdZamowienia = 4,
                            Ilosc = 5,
                            Uwagi = ""
                        },
                        new
                        {
                            IdWyrobuCukierniczego = 5,
                            IdZamowienia = 5,
                            Ilosc = 2,
                            Uwagi = ""
                        },
                        new
                        {
                            IdWyrobuCukierniczego = 1,
                            IdZamowienia = 6,
                            Ilosc = 3,
                            Uwagi = ""
                        },
                        new
                        {
                            IdWyrobuCukierniczego = 4,
                            IdZamowienia = 7,
                            Ilosc = 10,
                            Uwagi = "tlusty czwartek"
                        });
                });

            modelBuilder.Entity("Cwiczenia13.Models.Zamowienie", b =>
                {
                    b.HasOne("Cwiczenia13.Models.Klient", "Klient")
                        .WithMany("Zamowienia")
                        .HasForeignKey("IdKlient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cwiczenia13.Models.Pracownik", "Pracownik")
                        .WithMany("Zamowienia")
                        .HasForeignKey("IdPracownik")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cwiczenia13.Models.Zamowienie_WyrobCukierniczy", b =>
                {
                    b.HasOne("Cwiczenia13.Models.WyrobCukierniczy", "WyrobCukierniczy")
                        .WithMany("Zamowienie_WyrobCukierniczy")
                        .HasForeignKey("IdWyrobuCukierniczego")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cwiczenia13.Models.Zamowienie", "Zamowienie")
                        .WithMany("Zamowienie_WyrobCukierniczy")
                        .HasForeignKey("IdZamowienia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
